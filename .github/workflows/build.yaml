name: Build

env:
  app_name: ${{ github.event.repository.name }}
  ghub_pkg_token: ${{ secrets.GHUB_CODE_TOKEN }}

on:
  push:
    branches:
      - 'master'

jobs:
  build-application:
    name: Building container
    runs-on: ubuntu-latest
    env:
      ghub_sha: ${{ github.sha }}
      pr_owner: ${{ github.event.pull_request.head.repo.owner.login }}
    steps:

      - uses: igordcsouza/github-action-get-branch-name@master
        env:
          GITHUB_TOKEN: ${{ env.ghub_pkg_token }}
          ghub_sha: ${{ github.sha }}
      - id: branch_origin
        run: |
          echo "::set-output name=branch::${BRANCH_NAME}"

      - name: short-sha
        id: short-sha
        run: |
          echo "::set-output name=sha::$(echo "${{ env.ghub_sha }}" | cut -c1-8)"

      - uses: actions/checkout@v2

      - name: Build and send image to registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        id: build
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ env.ghub_pkg_token }}
          name: topstechbr/${{ env.app_name }}/${{ env.app_name }}
          tags: ${{ steps.short-sha.outputs.sha }}
          dockerfile: Dockerfile

  # send-to-heroku:
  #   name: Sent to Heroku
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: Build and push to Heroku
  #       uses: gonuit/heroku-docker-deploy@v1.3.3
  #       with:
  #         email: ${{ secrets.HEROKU_EMAIL }}
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
  #         dockerfile_directory: ./
  #         dockerfile_name: Dockerfile
  #         docker_options: "--no-cache"
